package com.dsa;
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'makeAnagram' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. STRING a
     *  2. STRING b
     */

    public static int makeAnagram(String a, String b) {
    
        char[] achar=a.toCharArray();
        char[] bchar=b.toCharArray();
        int count=0;
        
        Map<Character,Integer> map=new HashMap<Character,Integer>();
        for(int i=0;i<achar.length-1;i++)
        {
            if(map.containsKey(map.get(achar[i])))
                map.put(achar[i], map.get(achar[i])+1);
            else
                map.put(achar[i], 1);
        }
        
          for(int j=0;j<bchar.length-1;j++)
        {
            if(map.containsKey(map.get(bchar[j])))
                map.put(bchar[j], map.get(bchar[j])+1);
            else
                map.put(bchar[j], 1);
        }   
        
        for(Map.Entry<Character,Integer> c:map.entrySet()){
            if(c.getValue().intValue()==1)
                count= count+1;          
        }
            
        return count;
    }

}


