package com.dsa;

public class BreakPalindrome {
	
	public static void main(String[] args) {
		
		System.out.println(breakPalindrome("aaa"));
	}

	public static String breakPalindrome(String palindromeStr) {
	    
		
		
        if(palindromeStr.length()==1){
            return "IMPOSSIBLE";
        }
        
        for(int i=0;i<palindromeStr.length();i++){
           if(palindromeStr.charAt(i)!='a' 
           && (palindromeStr.length()%2==0 
           || i!=palindromeStr.length()/2)){
               return palindromeStr.substring(0,i)
               +"a"+palindromeStr.substring(i+1);
           }
           else
        	   return "IMPOSSIBLE";
        }
        
    return palindromeStr.substring(0,palindromeStr.length()-1)+"b";
    }

	public static List<Integer> countMinimumCharacters(String s, List<String> arr) {
        
	    List<Integer> list=new ArrayList<>();
	        for(int i=0;i<arr.size();i++){
	     int result=-2;
	     char[] ch=s.toCharArray();
	    
	    String str=String.valueOf(arr.get(i));
	    for(int j=0;j<str.length();j++)
	    {
	        char find=str.charAt(j);
	        boolean found = false;
	        for(int k=0;k<s.length();k++)
	        {
	            if(ch[k]==find)
	            {
	                found=true;
	                ch[k]='a';
	                if(k>result)
	                 result=k;
	                
	                break;
	            }
	        }
	        if(!found){
	            result=-2;
	            break;
	        }
	    }
	    result++;
	    list.add(result);
	            }   
	            return list;  
	    }

	}
}
